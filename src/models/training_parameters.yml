batchSize: 12 ## Input batch size
workers: 4 ## Number of data loading workers
nepoch: 90 ## Number of epochs
outf: "test_resnet50_5e-5_all_data_chip_dropout_adam_newdataprocessing_balanced_test/" ## Output folder
logfile: "logfile.txt" ## Logfile name
manualSeed: 0 ## Manually set random seed.  If 0, random number will be chosen from 1 -> 10000
save_freq: 10 ## Epoch frequency with which to save model
torch_deterministic: False ## If true, will force torch to use deterministic algorithms for reproducibility

### Dataset
dataset: "~/Documents/drivendata/stac-overflow/data/processed/v4_14Sept/" ## Dataset path
#split_name: "/data/5x5-ai-rd-S3/external-data/modelnet40_normal_resampled" ## Split filename root
split_name: "~/Documents/drivendata/stac-overflow/data/processed/v4_14Sept/"
#split_name: "~/Documents/drivendata/stac-overflow/data/processed/five_sets/"
dataset_type: "FloodDataset" ## Dataset type: shapenet, modelnet40, towernet
augmentation: True
balance_dataset_option: True
# balance_dataset_type: "WeightedRandomSampler" #
balance_dataset_type: "ImbalancedDatasetSampler"

### Optimizer
optimizer: adam ## Optimizer to use.  Right now only sgd/adam are implemented
lr: 0.00005 ## Learning rate
beta1: 0.9
beta2: 0.999
sgd_momentum: 0.9

### Learning rate scheduler
# step_size: 100
gamma: 0.5
patience: 5

### Loss function
xentropy: 0.5
xdice: 0.5

weights: False
segmentation_weights_heuristic: 0.0 #1.0 # 1.4
water_perc: 0.18 # approximate; check testing_data_balancing.ipynb

### Feature transform
# feature_transform: True ## Use feature transform
# ft_regularization: 0.001

### Augmentations
crop_size_square: 512
albumnttns_value: 15 # currently 0 < x <= 15; as 0000 < x <= 1111

### Model to use
model: "PretrainedUNet_dropout"
PretrainedUNet_backbone: "resnet50"
PretrainedUNet_weights: "imagenet"
# PretrainedUNet_aux: dict(
#   pooling="max",  # one of 'avg', 'max'
#   dropout=0.9,  # dropout ratio, default is None
#   activation="sigmoid",  # activation function, default is None
#   classes=2,  # define number of output labels
# )
